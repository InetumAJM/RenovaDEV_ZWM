*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZWM_V039........................................*
FORM GET_DATA_ZWM_V039.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZWM039 WHERE
(VIM_WHERETAB) .
    CLEAR ZWM_V039 .
ZWM_V039-MANDT =
ZWM039-MANDT .
ZWM_V039-LGNUM =
ZWM039-LGNUM .
ZWM_V039-KUNNR =
ZWM039-KUNNR .
ZWM_V039-IDSER =
ZWM039-IDSER .
    SELECT SINGLE * FROM KNA1 WHERE
KUNNR = ZWM039-KUNNR .
    IF SY-SUBRC EQ 0.
ZWM_V039-NAME1 =
KNA1-NAME1 .
    ENDIF.
<VIM_TOTAL_STRUC> = ZWM_V039.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZWM_V039 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZWM_V039.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZWM_V039-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZWM039 WHERE
  LGNUM = ZWM_V039-LGNUM AND
  KUNNR = ZWM_V039-KUNNR .
    IF SY-SUBRC = 0.
    DELETE ZWM039 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZWM039 WHERE
  LGNUM = ZWM_V039-LGNUM AND
  KUNNR = ZWM_V039-KUNNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZWM039.
    ENDIF.
ZWM039-MANDT =
ZWM_V039-MANDT .
ZWM039-LGNUM =
ZWM_V039-LGNUM .
ZWM039-KUNNR =
ZWM_V039-KUNNR .
ZWM039-IDSER =
ZWM_V039-IDSER .
    IF SY-SUBRC = 0.
    UPDATE ZWM039 .
    ELSE.
    INSERT ZWM039 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZWM_V039-UPD_FLAG,
STATUS_ZWM_V039-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZWM_V039.
  SELECT SINGLE * FROM ZWM039 WHERE
LGNUM = ZWM_V039-LGNUM AND
KUNNR = ZWM_V039-KUNNR .
ZWM_V039-MANDT =
ZWM039-MANDT .
ZWM_V039-LGNUM =
ZWM039-LGNUM .
ZWM_V039-KUNNR =
ZWM039-KUNNR .
ZWM_V039-IDSER =
ZWM039-IDSER .
    SELECT SINGLE * FROM KNA1 WHERE
KUNNR = ZWM039-KUNNR .
    IF SY-SUBRC EQ 0.
ZWM_V039-NAME1 =
KNA1-NAME1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZWM_V039-NAME1 .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZWM_V039 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZWM_V039-LGNUM TO
ZWM039-LGNUM .
MOVE ZWM_V039-KUNNR TO
ZWM039-KUNNR .
MOVE ZWM_V039-MANDT TO
ZWM039-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZWM039'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZWM039 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZWM039'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZWM_V039 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZWM039-MANDT =
ZWM_V039-MANDT .
ZWM039-LGNUM =
ZWM_V039-LGNUM .
ZWM039-KUNNR =
ZWM_V039-KUNNR .
ZWM039-IDSER =
ZWM_V039-IDSER .
    SELECT SINGLE * FROM KNA1 WHERE
KUNNR = ZWM039-KUNNR .
    IF SY-SUBRC EQ 0.
ZWM_V039-NAME1 =
KNA1-NAME1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZWM_V039-NAME1 .
    ENDIF.
ENDFORM.
*...processing: ZWM_V054........................................*
FORM GET_DATA_ZWM_V054.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZWM054 WHERE
(VIM_WHERETAB) .
    CLEAR ZWM_V054 .
ZWM_V054-MANDT =
ZWM054-MANDT .
ZWM_V054-MATNR =
ZWM054-MATNR .
    SELECT SINGLE * FROM MARA WHERE
MATNR = ZWM054-MATNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZWM_V054-MAKTX =
MAKT-MAKTX .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZWM_V054.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZWM_V054 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZWM_V054.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZWM_V054-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZWM054 WHERE
  MATNR = ZWM_V054-MATNR .
    IF SY-SUBRC = 0.
    DELETE ZWM054 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZWM054 WHERE
  MATNR = ZWM_V054-MATNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZWM054.
    ENDIF.
ZWM054-MANDT =
ZWM_V054-MANDT .
ZWM054-MATNR =
ZWM_V054-MATNR .
    IF SY-SUBRC = 0.
    UPDATE ZWM054 .
    ELSE.
    INSERT ZWM054 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZWM_V054-UPD_FLAG,
STATUS_ZWM_V054-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZWM_V054.
  SELECT SINGLE * FROM ZWM054 WHERE
MATNR = ZWM_V054-MATNR .
ZWM_V054-MANDT =
ZWM054-MANDT .
ZWM_V054-MATNR =
ZWM054-MATNR .
    SELECT SINGLE * FROM MARA WHERE
MATNR = ZWM054-MATNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZWM_V054-MAKTX =
MAKT-MAKTX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZWM_V054-MAKTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZWM_V054-MAKTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZWM_V054 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZWM_V054-MATNR TO
ZWM054-MATNR .
MOVE ZWM_V054-MANDT TO
ZWM054-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZWM054'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZWM054 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZWM054'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZWM_V054 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZWM054-MANDT =
ZWM_V054-MANDT .
ZWM054-MATNR =
ZWM_V054-MATNR .
    SELECT SINGLE * FROM MARA WHERE
MATNR = ZWM054-MATNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZWM_V054-MAKTX =
MAKT-MAKTX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZWM_V054-MAKTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZWM_V054-MAKTX .
    ENDIF.
ENDFORM.

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
